{"remainingRequest":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue","mtime":1654767385551},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1653894371810},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/babel-loader/lib/index.js","mtime":1653894370490},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1653894371810},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js","mtime":1653894376410}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBBbGVydCBmcm9tICcuL0FsZXJ0LnZ1ZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RvRG8nLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0b2RvOiBbXSwKICAgICAgYWRkVG9Eb0Zvcm06IHsKICAgICAgICB0YXNrOiAnJywKICAgICAgICBhdXRob3I6ICcnLAogICAgICAgIGRvbmU6IFtdLAogICAgICB9LAogICAgICBtZXNzYWdlOiAnJywKICAgICAgc2hvd01lc3NhZ2U6IGZhbHNlLAoKICAgICAgZWRpdEZvcm06IHsKICAgICAgICBpZDogJycsCiAgICAgICAgdGFzazogJycsCiAgICAgICAgYXV0aG9yOiAnJywKICAgICAgICBkb25lOiBbXSwKICAgICAgfSwKICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBhbGVydDogQWxlcnQsCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRUb0RvKCkgewogICAgICBjb25zdCBwYXRoID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC90b2RvJzsKICAgICAgYXhpb3MKICAgICAgICAuZ2V0KHBhdGgpCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy50b2RvID0gcmVzLmRhdGEudG9kbzsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgfSk7CiAgICB9LAogICAgYWRkVG9EbyhwYXlsb2FkKSB7CiAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL3RvZG8nOwogICAgICBheGlvcwogICAgICAgIC5wb3N0KHBhdGgsIHBheWxvYWQpCiAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgdGhpcy5nZXRUb0RvKCk7CiAgICAgICAgfSkKICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSAnVGFzayBhZGRlZCEnOwogICAgICAgICAgdGhpcy5zaG93TWVzc2FnZSA9IHRydWU7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICAgIHRoaXMuZ2V0VG9EbygpOwogICAgICAgIH0pOwogICAgfSwKCiAgICBpbml0Rm9ybSgpIHsKICAgICAgdGhpcy5hZGRUb0RvRm9ybS50YXNrID0gJyc7CiAgICAgIHRoaXMuYWRkVG9Eb0Zvcm0uYXV0aG9yID0gJyc7CiAgICAgIHRoaXMuYWRkVG9Eb0Zvcm0uZG9uZSA9IFtdOwogICAgICB0aGlzLmVkaXRGb3JtLmlkID0gJyc7CiAgICAgIHRoaXMuZWRpdEZvcm0udGFzayA9ICcnOwogICAgICB0aGlzLmVkaXRGb3JtLmF1dGhvciA9ICcnOwogICAgICB0aGlzLmVkaXRGb3JtLmRvbmUgPSBbXTsKICAgIH0sCiAgICBvblN1Ym1pdChldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMuJHJlZnMuYWRkVG9Eb01vZGFsLmhpZGUoKTsKICAgICAgbGV0IGRvbmUgPSBmYWxzZTsKICAgICAgaWYgKHRoaXMuYWRkVG9Eb0Zvcm0uZG9uZVswXSkgewogICAgICAgIGRvbmUgPSB0cnVlOwogICAgICB9CiAgICAgIGNvbnN0IHBheWxvYWQgPSB7CiAgICAgICAgdGFzazogdGhpcy5hZGRUb0RvRm9ybS50YXNrLAogICAgICAgIGF1dGhvcjogdGhpcy5hZGRUb0RvRm9ybS5hdXRob3IsCiAgICAgICAgZG9uZSwgLy8gcHJvcGVydHkgc2hvcnRoYW5kCiAgICAgIH07CiAgICAgIHRoaXMuYWRkVG9EbyhwYXlsb2FkKTsKICAgICAgdGhpcy5pbml0Rm9ybSgpOwogICAgfSwKICAgIG9uUmVzZXQoZXZ0KSB7CiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLiRyZWZzLmFkZFRvRG9Nb2RhbC5oaWRlKCk7CiAgICAgIHRoaXMuaW5pdEZvcm0oKTsKICAgIH0sCiAgICBjaGFuZ2VTaG93KCkgewogICAgICB0aGlzLnNob3dNZXNzYWdlID0gZmFsc2U7CiAgICB9LAogICAgZWRpdFRvZG8odG9kbykgewogICAgICAvLyBDaGVja2JveCBlcnJvciBieSBwYXNzaW5nIHRoZSByYXcgb2JqZWN0IHdpdGggZG9uZSBub3QgaW4gYXJyYXlzLgogICAgICAvLyBOb3cgZml4ZWQKICAgICAgdGhpcy5lZGl0Rm9ybSA9IHRvZG87CiAgICAgIHRoaXMuZWRpdEZvcm0uZG9uZSA9IFt0b2RvLmRvbmVdOwogICAgfSwKICAgIG9uU3VibWl0VXBkYXRlKGV2dCkgewogICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kcmVmcy5lZGl0VG9kb01vZGFsLmhpZGUoKTsKICAgICAgbGV0IGRvbmUgPSBmYWxzZTsKICAgICAgaWYgKHRoaXMuZWRpdEZvcm0uZG9uZVswXSkgZG9uZSA9IHRydWU7CiAgICAgIGNvbnN0IHBheWxvYWQgPSB7CiAgICAgICAgdGFzazogdGhpcy5lZGl0Rm9ybS50YXNrLAogICAgICAgIGF1dGhvcjogdGhpcy5lZGl0Rm9ybS5hdXRob3IsCiAgICAgICAgZG9uZSwKICAgICAgfTsKICAgICAgdGhpcy51cGRhdGVUb2RvKHBheWxvYWQsIHRoaXMuZWRpdEZvcm0uaWQpOwogICAgfSwKCiAgICBvblJlc2V0VXBkYXRlKGV2dCkgewogICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kcmVmcy5lZGl0VG9kb01vZGFsLmhpZGUoKTsKICAgICAgdGhpcy5pbml0Rm9ybSgpOwogICAgICB0aGlzLmdldFRvZG8oKTsgLy8gd2h5PwogICAgfSwKICAgIHVwZGF0ZVRvZG8ocGF5bG9hZCwgdG9kb0lEKSB7CiAgICAgIGNvbnN0IHBhdGggPSBgaHR0cDovL2xvY2FsaG9zdDo1MDAwL3RvZG8vJHt0b2RvSUR9YDsKICAgICAgYXhpb3MKICAgICAgICAucHV0KHBhdGgsIHBheWxvYWQpCiAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgdGhpcy5nZXRUb0RvKCk7CiAgICAgICAgICB0aGlzLm1lc3NhZ2UgPSAnVGFzayB1cGRhdGVkISc7CiAgICAgICAgICB0aGlzLnNob3dNZXNzYWdlID0gdHJ1ZTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHsKICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgICB0aGlzLmdldFRvRG8oKTsKICAgICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVUYXNrKHRvZG9JRCkgewogICAgICBjb25zdCBwYXRoID0gYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC90b2RvLyR7dG9kb0lEfWA7CiAgICAgIGF4aW9zCiAgICAgICAgLmRlbGV0ZShwYXRoKQogICAgICAgIC50aGVuKCgpID0+IHsKICAgICAgICAgIHRoaXMuZ2V0VG9EbygpOwogICAgICAgICAgdGhpcy5tZXNzYWdlID0gJ1Rhc2sgcmVtb3ZlZCEnOwogICAgICAgICAgdGhpcy5zaG93TWVzc2FnZSA9IHRydWU7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICAgICAgdGhpcy5nZXRUb0RvKCk7CiAgICAgICAgfSk7CiAgICB9LAogICAgb25EZWxldGVUYXNrKHRhc2spIHsKICAgICAgdGhpcy5yZW1vdmVUYXNrKHRhc2suaWQpOwogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFRvRG8oKTsKICB9LAp9Owo="},{"version":3,"sources":["ToDo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"ToDo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>CRUD - To Do App</h1>\n        <hr />\n        <br /><br />\n        <b-row>\n          <alert class=\"col\" id=\"alert\" :message=\"message\" :showing=\"showMessage\"></alert>\n          <button\n            id=\"cancel-button\"\n            v-show=\"showMessage\"\n            type=\"button\"\n            icon=\"chevron-bar-up\"\n            class=\"btn btn-danger btn-sm w-1\"\n            @click=\"changeShow()\"\n          >\n            x\n          </button>\n        </b-row>\n\n        <button type=\"button\" class=\"btn btn-success btn-sm\" v-b-modal.todo-modal>Add Task</button>\n        <br /><br />\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Task</th>\n              <th scope=\"col\">From</th>\n              <th scope=\"col\">Done?</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(todo, index) in todo\" :key=\"index\">\n              <td>{{ todo.task }}</td>\n              <td>{{ todo.author }}</td>\n              <td>\n                <span v-if=\"todo.done\">Yes</span>\n                <span v-else>No</span>\n              </td>\n              <td>\n                <div class=\"btn-group\" role=\"group\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-warning btn-sm\"\n                    v-b-modal.todo-update-modal\n                    @click=\"editTodo(todo)\"\n                  >\n                    Update\n                  </button>\n                  <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"onDeleteTask(todo)\">\n                    Delete\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <b-modal ref=\"addToDoModal\" id=\"todo-modal\" title=\"Add a new ToDo\" hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n        <b-form-group id=\"form-task-group\" label=\"Task:\" label-for=\"form-task-input\">\n          <b-form-input\n            id=\"form-task-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.task\"\n            required\n            placeholder=\"Enter task\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-author-group\" label=\"Author:\" label-for=\"form-author-input\">\n          <b-form-input\n            id=\"form-author-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.author\"\n            required\n            placeholder=\"Enter author\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-done-group\">\n          <b-form-checkbox-group v-model=\"addToDoForm.done\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Done?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      </b-form>\n    </b-modal>\n\n    <b-modal ref=\"editTodoModal\" id=\"todo-update-modal\" title=\"Update\" hide-footer>\n      <b-form @submit=\"onSubmitUpdate\" @reset=\"onResetUpdate\" class=\"w-100\">\n        <b-form-group id=\"form-title-edit-group\" label=\"Task:\" label-for=\"form-task-edit-input\">\n          <b-form-input\n            id=\"form-task-edit-input\"\n            type=\"text\"\n            v-model=\"editForm.task\"\n            required\n            placeholder=\"Enter task\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group\n          id=\"form-author-edit-group\"\n          label=\"Author:\"\n          label-for=\"form-author-edit-input\"\n        >\n          <b-form-input\n            id=\"form-author-edit-input\"\n            type=\"text\"\n            v-model=\"editForm.author\"\n            required\n            placeholder=\"Enter author\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-done-edit-group\">\n          <b-form-checkbox-group v-model=\"editForm.done\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Done?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Update</b-button>\n          <b-button type=\"reset\" variant=\"danger\">Cancel</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Alert from './Alert.vue';\n\nexport default {\n  name: 'ToDo',\n  data() {\n    return {\n      todo: [],\n      addToDoForm: {\n        task: '',\n        author: '',\n        done: [],\n      },\n      message: '',\n      showMessage: false,\n\n      editForm: {\n        id: '',\n        task: '',\n        author: '',\n        done: [],\n      },\n    };\n  },\n  components: {\n    alert: Alert,\n  },\n  methods: {\n    getToDo() {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .get(path)\n        .then((res) => {\n          this.todo = res.data.todo;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addToDo(payload) {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .post(path, payload)\n        .then(() => {\n          this.getToDo();\n        })\n        .then(() => {\n          this.message = 'Task added!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n          this.getToDo();\n        });\n    },\n\n    initForm() {\n      this.addToDoForm.task = '';\n      this.addToDoForm.author = '';\n      this.addToDoForm.done = [];\n      this.editForm.id = '';\n      this.editForm.task = '';\n      this.editForm.author = '';\n      this.editForm.done = [];\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      let done = false;\n      if (this.addToDoForm.done[0]) {\n        done = true;\n      }\n      const payload = {\n        task: this.addToDoForm.task,\n        author: this.addToDoForm.author,\n        done, // property shorthand\n      };\n      this.addToDo(payload);\n      this.initForm();\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      this.initForm();\n    },\n    changeShow() {\n      this.showMessage = false;\n    },\n    editTodo(todo) {\n      // Checkbox error by passing the raw object with done not in arrays.\n      // Now fixed\n      this.editForm = todo;\n      this.editForm.done = [todo.done];\n    },\n    onSubmitUpdate(evt) {\n      evt.preventDefault();\n      this.$refs.editTodoModal.hide();\n      let done = false;\n      if (this.editForm.done[0]) done = true;\n      const payload = {\n        task: this.editForm.task,\n        author: this.editForm.author,\n        done,\n      };\n      this.updateTodo(payload, this.editForm.id);\n    },\n\n    onResetUpdate(evt) {\n      evt.preventDefault();\n      this.$refs.editTodoModal.hide();\n      this.initForm();\n      this.getTodo(); // why?\n    },\n    updateTodo(payload, todoID) {\n      const path = `http://localhost:5000/todo/${todoID}`;\n      axios\n        .put(path, payload)\n        .then(() => {\n          this.getToDo();\n          this.message = 'Task updated!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getToDo();\n        });\n    },\n    removeTask(todoID) {\n      const path = `http://localhost:5000/todo/${todoID}`;\n      axios\n        .delete(path)\n        .then(() => {\n          this.getToDo();\n          this.message = 'Task removed!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getToDo();\n        });\n    },\n    onDeleteTask(task) {\n      this.removeTask(task.id);\n    },\n  },\n  created() {\n    this.getToDo();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding-left: 0;\n}\n\n#alert {\n  z-index: 1;\n  padding-right: 0;\n}\n\n#cancel-button {\n  z-index: 99;\n  height: 50px;\n\n  padding: 0.75rem 1.25rem;\n}\n</style>\n"]}]}