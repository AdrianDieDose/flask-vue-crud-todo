{"remainingRequest":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue?vue&type=style&index=0&id=52406d96&scoped=true&lang=css&","dependencies":[{"path":"/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue","mtime":1653905839470},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/css-loader/dist/cjs.js","mtime":1653894372690},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1653894376410},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/postcss-loader/src/index.js","mtime":1653894374730},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1653894371810},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js","mtime":1653894376410}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRhaW5lciB7CiAgcGFkZGluZy1sZWZ0OiAwOwp9Cg=="},{"version":3,"sources":["ToDo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgJA;AACA;AACA","file":"ToDo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>To Do App</h1>\n        <hr />\n        <br /><br />\n        <button type=\"button\" class=\"btn btn-success btn-sm\" v-b-modal.todo-modal>Add Task</button>\n        <br /><br />\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Task</th>\n              <th scope=\"col\">From</th>\n              <th scope=\"col\">Done?</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(todo, index) in todo\" :key=\"index\">\n              <td>{{ todo.task }}</td>\n              <td>{{ todo.author }}</td>\n              <td>\n                <span v-if=\"todo.done\">Yes</span>\n                <span v-else>No</span>\n              </td>\n              <td>\n                <div class=\"btn-group\" role=\"group\">\n                  <button type=\"button\" class=\"btn btn-warning btn-sm\">Update</button>\n                  <button type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <b-modal ref=\"addToDoModal\" id=\"todo-modal\" title=\"Add a new ToDo\" hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n        <b-form-group id=\"form-task-group\" label=\"Task:\" label-for=\"form-task-input\">\n          <b-form-input\n            id=\"form-task-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.task\"\n            required\n            placeholder=\"Enter task\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-author-group\" label=\"Author:\" label-for=\"form-author-input\">\n          <b-form-input\n            id=\"form-author-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.author\"\n            required\n            placeholder=\"Enter author\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-done-group\">\n          <b-form-checkbox-group v-model=\"addToDoForm.done\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Done?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ToDo',\n  data() {\n    return {\n      todo: [],\n      addToDoForm: {\n        task: '',\n        author: '',\n        done: [],\n      },\n    };\n  },\n  methods: {\n    getTodo() {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .get(path)\n        .then((res) => {\n          this.todo = res.data.todo;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addToDo(payload) {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .post(path, payload)\n        .then(() => {\n          this.getToDo();\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n          this.getToDo();\n        });\n    },\n    initForm() {\n      this.addToDoForm.task = '';\n      this.addToDoForm.author = '';\n      this.addToDoForm.done = [];\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      let read = false;\n      if (this.addToDoForm.done[0]) read = true;\n      const payload = {\n        task: this.addToDoForm.task,\n        author: this.addToDoForm.author,\n        read, // property shorthand\n      };\n      this.addToDo(payload);\n      this.initForm();\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      this.initForm();\n    },\n  },\n  created() {\n    this.getTodo();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding-left: 0;\n}\n</style>\n"]}]}