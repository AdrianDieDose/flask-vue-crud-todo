{"remainingRequest":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/babel-loader/lib/index.js!/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue","mtime":1654788107647},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/babel.config.js","mtime":1653894369820},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1653894371810},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/babel-loader/lib/index.js","mtime":1653894370490},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1653894371810},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js","mtime":1653894376410}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEFsZXJ0IGZyb20gJy4vQWxlcnQudnVlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUb0RvJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdG9kbzogW10sCiAgICAgIGFkZFRvRG9Gb3JtOiB7CiAgICAgICAgdGFzazogJycsCiAgICAgICAgYXV0aG9yOiAnJywKICAgICAgICBkb25lOiBbXQogICAgICB9LAogICAgICBtZXNzYWdlOiAnJywKICAgICAgc2hvd01lc3NhZ2U6IGZhbHNlLAogICAgICBlZGl0Rm9ybTogewogICAgICAgIGlkOiAnJywKICAgICAgICB0YXNrOiAnJywKICAgICAgICBhdXRob3I6ICcnLAogICAgICAgIGRvbmU6IFtdCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBhbGVydDogQWxlcnQKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFRvRG86IGZ1bmN0aW9uIGdldFRvRG8oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgcGF0aCA9ICdodHRwOi8vbG9jYWxob3N0OjUwMDAvdG9kbyc7CiAgICAgIGF4aW9zLmdldChwYXRoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy50b2RvID0gcmVzLmRhdGEudG9kbzsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgIH0pOwogICAgfSwKICAgIGFkZFRvRG86IGZ1bmN0aW9uIGFkZFRvRG8ocGF5bG9hZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC90b2RvJzsKICAgICAgYXhpb3MucG9zdChwYXRoLCBwYXlsb2FkKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuZ2V0VG9EbygpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIubWVzc2FnZSA9ICdUYXNrIGFkZGVkISc7CiAgICAgICAgX3RoaXMyLnNob3dNZXNzYWdlID0gdHJ1ZTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwoKICAgICAgICBfdGhpczIuZ2V0VG9EbygpOwogICAgICB9KTsKICAgIH0sCiAgICBpbml0Rm9ybTogZnVuY3Rpb24gaW5pdEZvcm0oKSB7CiAgICAgIHRoaXMuYWRkVG9Eb0Zvcm0udGFzayA9ICcnOwogICAgICB0aGlzLmFkZFRvRG9Gb3JtLmF1dGhvciA9ICcnOwogICAgICB0aGlzLmFkZFRvRG9Gb3JtLmRvbmUgPSBbXTsKICAgICAgdGhpcy5lZGl0Rm9ybS5pZCA9ICcnOwogICAgICB0aGlzLmVkaXRGb3JtLnRhc2sgPSAnJzsKICAgICAgdGhpcy5lZGl0Rm9ybS5hdXRob3IgPSAnJzsKICAgICAgdGhpcy5lZGl0Rm9ybS5kb25lID0gW107CiAgICB9LAogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KGV2dCkgewogICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kcmVmcy5hZGRUb0RvTW9kYWwuaGlkZSgpOwogICAgICB2YXIgZG9uZSA9IGZhbHNlOwoKICAgICAgaWYgKHRoaXMuYWRkVG9Eb0Zvcm0uZG9uZVswXSkgewogICAgICAgIGRvbmUgPSB0cnVlOwogICAgICB9CgogICAgICB2YXIgcGF5bG9hZCA9IHsKICAgICAgICB0YXNrOiB0aGlzLmFkZFRvRG9Gb3JtLnRhc2ssCiAgICAgICAgYXV0aG9yOiB0aGlzLmFkZFRvRG9Gb3JtLmF1dGhvciwKICAgICAgICBkb25lOiBkb25lIC8vIHByb3BlcnR5IHNob3J0aGFuZAoKICAgICAgfTsKICAgICAgdGhpcy5hZGRUb0RvKHBheWxvYWQpOwogICAgICB0aGlzLmluaXRGb3JtKCk7CiAgICB9LAogICAgb25SZXNldDogZnVuY3Rpb24gb25SZXNldChldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMuJHJlZnMuYWRkVG9Eb01vZGFsLmhpZGUoKTsKICAgICAgdGhpcy5pbml0Rm9ybSgpOwogICAgfSwKICAgIGNoYW5nZVNob3c6IGZ1bmN0aW9uIGNoYW5nZVNob3coKSB7CiAgICAgIHRoaXMuc2hvd01lc3NhZ2UgPSBmYWxzZTsKICAgIH0sCiAgICBlZGl0VG9kbzogZnVuY3Rpb24gZWRpdFRvZG8odG9kbykgewogICAgICAvLyBDaGVja2JveCBlcnJvciBieSBwYXNzaW5nIHRoZSByYXcgb2JqZWN0IHdpdGggZG9uZSBub3QgaW4gYXJyYXlzLgogICAgICAvLyBOb3cgZml4ZWQKICAgICAgdGhpcy5lZGl0Rm9ybSA9IHRvZG87IC8vIFRoaXMgZml4ZWQgY29uc29sZSBlcnJvciBidXQgYnVncyBvdXQgKEJ1ZyBvbiB0b3ApCiAgICAgIC8vIHRoaXMuZWRpdEZvcm0uZG9uZSA9IFt0b2RvLmRvbmVdOwogICAgfSwKICAgIG9uU3VibWl0VXBkYXRlOiBmdW5jdGlvbiBvblN1Ym1pdFVwZGF0ZShldnQpIHsKICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMuJHJlZnMuZWRpdFRvZG9Nb2RhbC5oaWRlKCk7CiAgICAgIHZhciBkb25lID0gZmFsc2U7CiAgICAgIGlmICh0aGlzLmVkaXRGb3JtLmRvbmVbMF0pIGRvbmUgPSB0cnVlOwogICAgICB2YXIgcGF5bG9hZCA9IHsKICAgICAgICB0YXNrOiB0aGlzLmVkaXRGb3JtLnRhc2ssCiAgICAgICAgYXV0aG9yOiB0aGlzLmVkaXRGb3JtLmF1dGhvciwKICAgICAgICBkb25lOiBkb25lCiAgICAgIH07CiAgICAgIHRoaXMudXBkYXRlVG9kbyhwYXlsb2FkLCB0aGlzLmVkaXRGb3JtLmlkKTsKICAgIH0sCiAgICBvblJlc2V0VXBkYXRlOiBmdW5jdGlvbiBvblJlc2V0VXBkYXRlKGV2dCkgewogICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kcmVmcy5lZGl0VG9kb01vZGFsLmhpZGUoKTsgLy8gQmVhY3VzZSBvZiBpbml0Rm9ybSB0aGUgcm93IGdldHMgZGVsZXRlZCBidXQgcmVsb2FkZWQgaW4gZ2V0VG9Eby4uLiBGSVg/CiAgICAgIC8vIHRoaXMuaW5pdEZvcm0oKTsKCiAgICAgIHRoaXMuZ2V0VG9EbygpOyAvLyB3aHk/CiAgICB9LAogICAgdXBkYXRlVG9kbzogZnVuY3Rpb24gdXBkYXRlVG9kbyhwYXlsb2FkLCB0b2RvSUQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgcGF0aCA9ICJodHRwOi8vbG9jYWxob3N0OjUwMDAvdG9kby8iLmNvbmNhdCh0b2RvSUQpOwogICAgICBheGlvcy5wdXQocGF0aCwgcGF5bG9hZCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMzLmdldFRvRG8oKTsKCiAgICAgICAgX3RoaXMzLm1lc3NhZ2UgPSAnVGFzayB1cGRhdGVkISc7CiAgICAgICAgX3RoaXMzLnNob3dNZXNzYWdlID0gdHJ1ZTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lCiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CgogICAgICAgIF90aGlzMy5nZXRUb0RvKCk7CiAgICAgIH0pOwogICAgfSwKICAgIHJlbW92ZVRhc2s6IGZ1bmN0aW9uIHJlbW92ZVRhc2sodG9kb0lEKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIHBhdGggPSAiaHR0cDovL2xvY2FsaG9zdDo1MDAwL3RvZG8vIi5jb25jYXQodG9kb0lEKTsKICAgICAgYXhpb3MuZGVsZXRlKHBhdGgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNC5nZXRUb0RvKCk7CgogICAgICAgIF90aGlzNC5tZXNzYWdlID0gJ1Rhc2sgcmVtb3ZlZCEnOwogICAgICAgIF90aGlzNC5zaG93TWVzc2FnZSA9IHRydWU7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwoKICAgICAgICBfdGhpczQuZ2V0VG9EbygpOwogICAgICB9KTsKICAgIH0sCiAgICBvbkRlbGV0ZVRhc2s6IGZ1bmN0aW9uIG9uRGVsZXRlVGFzayh0YXNrKSB7CiAgICAgIHRoaXMucmVtb3ZlVGFzayh0YXNrLmlkKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFRvRG8oKTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AAEA;EACAA,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC,QADA;MAEAC;QACAC,QADA;QAEAC,UAFA;QAGAC;MAHA,CAFA;MAOAC,WAPA;MAQAC,kBARA;MAUAC;QACAC,MADA;QAEAN,QAFA;QAGAC,UAHA;QAIAC;MAJA;IAVA;EAiBA,CApBA;EAqBAK;IACAC;EADA,CArBA;EAwBAC;IACAC,OADA,qBACA;MAAA;;MACA;MACAC,MACAC,GADA,CACAC,IADA,EAEAC,IAFA,CAEA;QACA;MACA,CAJA,EAKAC,KALA,CAKA;QACA;QACAC;MACA,CARA;IASA,CAZA;IAaAC,OAbA,mBAaAC,OAbA,EAaA;MAAA;;MACA;MACAP,MACAQ,IADA,CACAN,IADA,EACAK,OADA,EAEAJ,IAFA,CAEA;QACA;MACA,CAJA,EAKAA,IALA,CAKA;QACA;QACA;MACA,CARA,EASAC,KATA,CASA;QACA;QACAC;;QACA;MACA,CAbA;IAcA,CA7BA;IA+BAI,QA/BA,sBA+BA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAvCA;IAwCAC,QAxCA,oBAwCAC,GAxCA,EAwCA;MACAA;MACA;MACA;;MACA;QACApB;MACA;;MACA;QACAF,2BADA;QAEAC,+BAFA;QAGAC,UAHA,CAGA;;MAHA;MAKA;MACA;IACA,CAtDA;IAuDAqB,OAvDA,mBAuDAD,GAvDA,EAuDA;MACAA;MACA;MACA;IACA,CA3DA;IA4DAE,UA5DA,wBA4DA;MACA;IACA,CA9DA;IA+DAC,QA/DA,oBA+DA3B,IA/DA,EA+DA;MACA;MACA;MACA,qBAHA,CAIA;MACA;IACA,CArEA;IAsEA4B,cAtEA,0BAsEAJ,GAtEA,EAsEA;MACAA;MACA;MACA;MACA;MACA;QACAtB,wBADA;QAEAC,4BAFA;QAGAC;MAHA;MAKA;IACA,CAjFA;IAmFAyB,aAnFA,yBAmFAL,GAnFA,EAmFA;MACAA;MACA,gCAFA,CAGA;MACA;;MACA,eALA,CAKA;IACA,CAzFA;IA0FAM,UA1FA,sBA0FAV,OA1FA,EA0FAW,MA1FA,EA0FA;MAAA;;MACA;MACAlB,MACAmB,GADA,CACAjB,IADA,EACAK,OADA,EAEAJ,IAFA,CAEA;QACA;;QACA;QACA;MACA,CANA,EAOAC,KAPA,CAOA;QACA;QACAC;;QACA;MACA,CAXA;IAYA,CAxGA;IAyGAe,UAzGA,sBAyGAF,MAzGA,EAyGA;MAAA;;MACA;MACAlB,MACAqB,MADA,CACAnB,IADA,EAEAC,IAFA,CAEA;QACA;;QACA;QACA;MACA,CANA,EAOAC,KAPA,CAOA;QACA;QACAC;;QACA;MACA,CAXA;IAYA,CAvHA;IAwHAiB,YAxHA,wBAwHAjC,IAxHA,EAwHA;MACA;IACA;EA1HA,CAxBA;EAoJAkC,OApJA,qBAoJA;IACA;EACA;AAtJA","names":["name","data","todo","addToDoForm","task","author","done","message","showMessage","editForm","id","components","alert","methods","getToDo","axios","get","path","then","catch","console","addToDo","payload","post","initForm","onSubmit","evt","onReset","changeShow","editTodo","onSubmitUpdate","onResetUpdate","updateTodo","todoID","put","removeTask","delete","onDeleteTask","created"],"sourceRoot":"src/components","sources":["ToDo.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>RESTful - To Do App</h1>\n        <p>Need fix: when update clicked done turns yes and when canceled data gets deleted.</p>\n        <hr />\n        <br /><br />\n        <b-row>\n          <alert class=\"col\" id=\"alert\" :message=\"message\" :showing=\"showMessage\"></alert>\n          <button\n            id=\"cancel-button\"\n            v-show=\"showMessage\"\n            type=\"button\"\n            icon=\"chevron-bar-up\"\n            class=\"btn btn-danger btn-sm w-1\"\n            @click=\"changeShow()\"\n          >\n            x\n          </button>\n        </b-row>\n\n        <button type=\"button\" class=\"btn btn-success btn-sm\" v-b-modal.todo-modal>Add Task</button>\n        <br /><br />\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Task</th>\n              <th scope=\"col\">From</th>\n              <th scope=\"col\">Done?</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(todo, index) in todo\" :key=\"index\">\n              <td>{{ todo.task }}</td>\n              <td>{{ todo.author }}</td>\n              <td>\n                <span v-if=\"todo.done\">Yes</span>\n                <span v-else>No</span>\n              </td>\n              <td>\n                <div class=\"btn-group\" role=\"group\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-warning btn-sm\"\n                    v-b-modal.todo-update-modal\n                    @click=\"editTodo(todo)\"\n                  >\n                    Update\n                  </button>\n                  <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"onDeleteTask(todo)\">\n                    Delete\n                  </button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <b-modal ref=\"addToDoModal\" id=\"todo-modal\" title=\"Add a new ToDo\" hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n        <b-form-group id=\"form-task-group\" label=\"Task:\" label-for=\"form-task-input\">\n          <b-form-input\n            id=\"form-task-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.task\"\n            required\n            placeholder=\"Enter task\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-author-group\" label=\"Author:\" label-for=\"form-author-input\">\n          <b-form-input\n            id=\"form-author-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.author\"\n            required\n            placeholder=\"Enter author\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-done-group\">\n          <b-form-checkbox-group v-model=\"addToDoForm.done\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Done?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      </b-form>\n    </b-modal>\n\n    <b-modal ref=\"editTodoModal\" id=\"todo-update-modal\" title=\"Update\" hide-footer>\n      <b-form @submit=\"onSubmitUpdate\" @reset=\"onResetUpdate\" class=\"w-100\">\n        <b-form-group id=\"form-title-edit-group\" label=\"Task:\" label-for=\"form-task-edit-input\">\n          <b-form-input\n            id=\"form-task-edit-input\"\n            type=\"text\"\n            v-model=\"editForm.task\"\n            required\n            placeholder=\"Enter task\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group\n          id=\"form-author-edit-group\"\n          label=\"Author:\"\n          label-for=\"form-author-edit-input\"\n        >\n          <b-form-input\n            id=\"form-author-edit-input\"\n            type=\"text\"\n            v-model=\"editForm.author\"\n            required\n            placeholder=\"Enter author\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-done-edit-group\">\n          <b-form-checkbox-group v-model=\"editForm.done\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Done?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button-group>\n          <b-button type=\"submit\" variant=\"primary\">Update</b-button>\n          <b-button type=\"button\" @click=\"onResetUpdate\" variant=\"danger\">Cancel</b-button>\n        </b-button-group>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Alert from './Alert.vue';\n\nexport default {\n  name: 'ToDo',\n  data() {\n    return {\n      todo: [],\n      addToDoForm: {\n        task: '',\n        author: '',\n        done: [],\n      },\n      message: '',\n      showMessage: false,\n\n      editForm: {\n        id: '',\n        task: '',\n        author: '',\n        done: [],\n      },\n    };\n  },\n  components: {\n    alert: Alert,\n  },\n  methods: {\n    getToDo() {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .get(path)\n        .then((res) => {\n          this.todo = res.data.todo;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addToDo(payload) {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .post(path, payload)\n        .then(() => {\n          this.getToDo();\n        })\n        .then(() => {\n          this.message = 'Task added!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n          this.getToDo();\n        });\n    },\n\n    initForm() {\n      this.addToDoForm.task = '';\n      this.addToDoForm.author = '';\n      this.addToDoForm.done = [];\n      this.editForm.id = '';\n      this.editForm.task = '';\n      this.editForm.author = '';\n      this.editForm.done = [];\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      let done = false;\n      if (this.addToDoForm.done[0]) {\n        done = true;\n      }\n      const payload = {\n        task: this.addToDoForm.task,\n        author: this.addToDoForm.author,\n        done, // property shorthand\n      };\n      this.addToDo(payload);\n      this.initForm();\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      this.initForm();\n    },\n    changeShow() {\n      this.showMessage = false;\n    },\n    editTodo(todo) {\n      // Checkbox error by passing the raw object with done not in arrays.\n      // Now fixed\n      this.editForm = todo;\n      // This fixed console error but bugs out (Bug on top)\n      // this.editForm.done = [todo.done];\n    },\n    onSubmitUpdate(evt) {\n      evt.preventDefault();\n      this.$refs.editTodoModal.hide();\n      let done = false;\n      if (this.editForm.done[0]) done = true;\n      const payload = {\n        task: this.editForm.task,\n        author: this.editForm.author,\n        done,\n      };\n      this.updateTodo(payload, this.editForm.id);\n    },\n\n    onResetUpdate(evt) {\n      evt.preventDefault();\n      this.$refs.editTodoModal.hide();\n      // Beacuse of initForm the row gets deleted but reloaded in getToDo... FIX?\n      // this.initForm();\n      this.getToDo(); // why?\n    },\n    updateTodo(payload, todoID) {\n      const path = `http://localhost:5000/todo/${todoID}`;\n      axios\n        .put(path, payload)\n        .then(() => {\n          this.getToDo();\n          this.message = 'Task updated!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getToDo();\n        });\n    },\n    removeTask(todoID) {\n      const path = `http://localhost:5000/todo/${todoID}`;\n      axios\n        .delete(path)\n        .then(() => {\n          this.getToDo();\n          this.message = 'Task removed!';\n          this.showMessage = true;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n          this.getToDo();\n        });\n    },\n    onDeleteTask(task) {\n      this.removeTask(task.id);\n    },\n  },\n  created() {\n    this.getToDo();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding-left: 0;\n}\n\n#alert {\n  z-index: 1;\n  padding-right: 0;\n}\n\n#cancel-button {\n  z-index: 99;\n  height: 50px;\n\n  padding: 0.75rem 1.25rem;\n}\n</style>\n"]}]}