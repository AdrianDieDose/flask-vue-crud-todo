{"remainingRequest":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/babel-loader/lib/index.js!/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/adrian/dev/flask-vue-crud-todo/client/src/components/ToDo.vue","mtime":1653905839470},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/babel.config.js","mtime":1653894369820},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1653894371810},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/babel-loader/lib/index.js","mtime":1653894370490},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/cache-loader/dist/cjs.js","mtime":1653894371810},{"path":"/home/adrian/dev/flask-vue-crud-todo/client/node_modules/vue-loader/lib/index.js","mtime":1653894376410}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUb0RvJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdG9kbzogW10sCiAgICAgIGFkZFRvRG9Gb3JtOiB7CiAgICAgICAgdGFzazogJycsCiAgICAgICAgYXV0aG9yOiAnJywKICAgICAgICBkb25lOiBbXQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VG9kbzogZnVuY3Rpb24gZ2V0VG9kbygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC90b2RvJzsKICAgICAgYXhpb3MuZ2V0KHBhdGgpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzLnRvZG8gPSByZXMuZGF0YS50b2RvOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgYWRkVG9EbzogZnVuY3Rpb24gYWRkVG9EbyhwYXlsb2FkKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHBhdGggPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL3RvZG8nOwogICAgICBheGlvcy5wb3N0KHBhdGgsIHBheWxvYWQpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5nZXRUb0RvKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZQogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKCiAgICAgICAgX3RoaXMyLmdldFRvRG8oKTsKICAgICAgfSk7CiAgICB9LAogICAgaW5pdEZvcm06IGZ1bmN0aW9uIGluaXRGb3JtKCkgewogICAgICB0aGlzLmFkZFRvRG9Gb3JtLnRhc2sgPSAnJzsKICAgICAgdGhpcy5hZGRUb0RvRm9ybS5hdXRob3IgPSAnJzsKICAgICAgdGhpcy5hZGRUb0RvRm9ybS5kb25lID0gW107CiAgICB9LAogICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KGV2dCkgewogICAgICBldnQucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kcmVmcy5hZGRUb0RvTW9kYWwuaGlkZSgpOwogICAgICB2YXIgcmVhZCA9IGZhbHNlOwogICAgICBpZiAodGhpcy5hZGRUb0RvRm9ybS5kb25lWzBdKSByZWFkID0gdHJ1ZTsKICAgICAgdmFyIHBheWxvYWQgPSB7CiAgICAgICAgdGFzazogdGhpcy5hZGRUb0RvRm9ybS50YXNrLAogICAgICAgIGF1dGhvcjogdGhpcy5hZGRUb0RvRm9ybS5hdXRob3IsCiAgICAgICAgcmVhZDogcmVhZCAvLyBwcm9wZXJ0eSBzaG9ydGhhbmQKCiAgICAgIH07CiAgICAgIHRoaXMuYWRkVG9EbyhwYXlsb2FkKTsKICAgICAgdGhpcy5pbml0Rm9ybSgpOwogICAgfSwKICAgIG9uUmVzZXQ6IGZ1bmN0aW9uIG9uUmVzZXQoZXZ0KSB7CiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLiRyZWZzLmFkZFRvRG9Nb2RhbC5oaWRlKCk7CiAgICAgIHRoaXMuaW5pdEZvcm0oKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFRvZG8oKTsKICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AAEA;EACAA,YADA;EAEAC,IAFA,kBAEA;IACA;MACAC,QADA;MAEAC;QACAC,QADA;QAEAC,UAFA;QAGAC;MAHA;IAFA;EAQA,CAXA;EAYAC;IACAC,OADA,qBACA;MAAA;;MACA;MACAC,MACAC,GADA,CACAC,IADA,EAEAC,IAFA,CAEA;QACA;MACA,CAJA,EAKAC,KALA,CAKA;QACA;QACAC;MACA,CARA;IASA,CAZA;IAaAC,OAbA,mBAaAC,OAbA,EAaA;MAAA;;MACA;MACAP,MACAQ,IADA,CACAN,IADA,EACAK,OADA,EAEAJ,IAFA,CAEA;QACA;MACA,CAJA,EAKAC,KALA,CAKA;QACA;QACAC;;QACA;MACA,CATA;IAUA,CAzBA;IA0BAI,QA1BA,sBA0BA;MACA;MACA;MACA;IACA,CA9BA;IA+BAC,QA/BA,oBA+BAC,GA/BA,EA+BA;MACAA;MACA;MACA;MACA;MACA;QACAhB,2BADA;QAEAC,+BAFA;QAGAgB,UAHA,CAGA;;MAHA;MAKA;MACA;IACA,CA3CA;IA4CAC,OA5CA,mBA4CAF,GA5CA,EA4CA;MACAA;MACA;MACA;IACA;EAhDA,CAZA;EA8DAG,OA9DA,qBA8DA;IACA;EACA;AAhEA","names":["name","data","todo","addToDoForm","task","author","done","methods","getTodo","axios","get","path","then","catch","console","addToDo","payload","post","initForm","onSubmit","evt","read","onReset","created"],"sourceRoot":"src/components","sources":["ToDo.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-10\">\n        <h1>To Do App</h1>\n        <hr />\n        <br /><br />\n        <button type=\"button\" class=\"btn btn-success btn-sm\" v-b-modal.todo-modal>Add Task</button>\n        <br /><br />\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Task</th>\n              <th scope=\"col\">From</th>\n              <th scope=\"col\">Done?</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(todo, index) in todo\" :key=\"index\">\n              <td>{{ todo.task }}</td>\n              <td>{{ todo.author }}</td>\n              <td>\n                <span v-if=\"todo.done\">Yes</span>\n                <span v-else>No</span>\n              </td>\n              <td>\n                <div class=\"btn-group\" role=\"group\">\n                  <button type=\"button\" class=\"btn btn-warning btn-sm\">Update</button>\n                  <button type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <b-modal ref=\"addToDoModal\" id=\"todo-modal\" title=\"Add a new ToDo\" hide-footer>\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\" class=\"w-100\">\n        <b-form-group id=\"form-task-group\" label=\"Task:\" label-for=\"form-task-input\">\n          <b-form-input\n            id=\"form-task-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.task\"\n            required\n            placeholder=\"Enter task\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-author-group\" label=\"Author:\" label-for=\"form-author-input\">\n          <b-form-input\n            id=\"form-author-input\"\n            type=\"text\"\n            v-model=\"addToDoForm.author\"\n            required\n            placeholder=\"Enter author\"\n          >\n          </b-form-input>\n        </b-form-group>\n        <b-form-group id=\"form-done-group\">\n          <b-form-checkbox-group v-model=\"addToDoForm.done\" id=\"form-checks\">\n            <b-form-checkbox value=\"true\">Done?</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n        <b-button type=\"submit\" variant=\"primary\">Submit</b-button>\n        <b-button type=\"reset\" variant=\"danger\">Reset</b-button>\n      </b-form>\n    </b-modal>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'ToDo',\n  data() {\n    return {\n      todo: [],\n      addToDoForm: {\n        task: '',\n        author: '',\n        done: [],\n      },\n    };\n  },\n  methods: {\n    getTodo() {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .get(path)\n        .then((res) => {\n          this.todo = res.data.todo;\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.error(error);\n        });\n    },\n    addToDo(payload) {\n      const path = 'http://localhost:5000/todo';\n      axios\n        .post(path, payload)\n        .then(() => {\n          this.getToDo();\n        })\n        .catch((error) => {\n          // eslint-disable-next-line\n          console.log(error);\n          this.getToDo();\n        });\n    },\n    initForm() {\n      this.addToDoForm.task = '';\n      this.addToDoForm.author = '';\n      this.addToDoForm.done = [];\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      let read = false;\n      if (this.addToDoForm.done[0]) read = true;\n      const payload = {\n        task: this.addToDoForm.task,\n        author: this.addToDoForm.author,\n        read, // property shorthand\n      };\n      this.addToDo(payload);\n      this.initForm();\n    },\n    onReset(evt) {\n      evt.preventDefault();\n      this.$refs.addToDoModal.hide();\n      this.initForm();\n    },\n  },\n  created() {\n    this.getTodo();\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding-left: 0;\n}\n</style>\n"]}]}